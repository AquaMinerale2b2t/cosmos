package cope.cosmos.client.features.modules.exploits;

import cope.cosmos.client.events.network.PacketEvent;
import cope.cosmos.client.events.render.player.RenderSelectionBoxEvent;
import cope.cosmos.client.features.modules.Category;
import cope.cosmos.client.features.modules.Module;
import cope.cosmos.client.features.setting.Setting;
import cope.cosmos.util.render.RenderBuilder;
import cope.cosmos.util.render.RenderBuilder.Box;
import cope.cosmos.util.render.RenderUtil;
import cope.cosmos.util.string.ColorUtil;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.network.play.client.CPacketPlayerTryUseItemOnBlock;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.RayTraceResult;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import org.lwjgl.input.Mouse;

/**
 * @author linustouchtips
 * @since 10/10/2022
 */
public class ClickTPModule extends Module {
    public static ClickTPModule INSTANCE;

    public ClickTPModule() {
        super("ClickTP", Category.EXPLOITS, "Allows you to teleport wherever you click");
        INSTANCE = this;
    }

    // **************************** general ****************************

    public static Setting<Double> range = new Setting<>("Range",  1.0, 100.0, 150.0, 0)
            .setAlias("Reach")
            .setDescription("Range to teleport");

    // teleport result
    private RayTraceResult tp;

    @Override
    public void onUpdate() {

        // cannot be in gui's while teleporting
        if (mc.currentScreen == null) {

            // tp raytrace
            tp = mc.player.rayTrace(range.getValue(), mc.getRenderPartialTicks());

            // right click
            if (Mouse.isButtonDown(1)) {

                // check if highlight exists
                if (tp != null && tp.typeOfHit.equals(RayTraceResult.Type.BLOCK)) {

                    // teleport position
                    BlockPos teleport = tp.getBlockPos().up();

                    // teleport
                    mc.player.setPosition(teleport.getX(), teleport.getY(), teleport.getZ());
                    mc.player.connection.sendPacket(new CPacketPlayer.Position(teleport.getX(), teleport.getY(), teleport.getZ(), mc.player.onGround));
                    disable(false);
                }
            }
        }
    }

    @Override
    public void onRender3D() {

        // check if teleport exists
        if (tp != null && tp.typeOfHit.equals(RayTraceResult.Type.BLOCK)) {

            // draw teleport highlight
            RenderUtil.drawBox(new RenderBuilder()
                    .position(tp.getBlockPos())
                    .color(ColorUtil.getPrimaryAlphaColor(60))
                    .box(Box.BOTH)
                    .setup()
                    .line(1.5F)
                    .depth(true)
                    .blend()
                    .texture()
            );
        }
    }

    @SubscribeEvent
    public void onPacketSend(PacketEvent.PacketSendEvent event) {

        // packet for clicking blocks
        if (event.getPacket() instanceof CPacketPlayerTryUseItemOnBlock) {

            // cancel when teleporting
            event.setCanceled(true);
        }
    }

    @SubscribeEvent
    public void onRenderSelectionBox(RenderSelectionBoxEvent event) {

        // prevent vanilla selection box from rendering
        event.setCanceled(true);
    }
}
